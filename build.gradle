buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
		classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.22.0"
	}
}

plugins {
	id 'com.palantir.git-version' version '0.12.3'
}

apply plugin: 'java'
apply plugin: 'io.codearte.nexus-staging'

description = "kafka-connect-s3"

allprojects  {
    apply plugin: 'idea'
	apply plugin: 'java-library'

    group = 'com.spredfast.kafka.connect.s3'
	version = '1.0'

	apply plugin: 'java'
	sourceCompatibility = 17
	targetCompatibility = 17

	repositories {
		mavenCentral()
	}
}

apply plugin: "com.github.johnrengelman.shadow"


shadowJar {
	dependencies {
		// provided in the connect classpath
		exclude(dependency('org.apache.kafka:connect-api:2.4.1'))
		exclude(dependency('org.apache.kafka:kafka-clients:2.4.1'))
		exclude(dependency('net.jpountz.lz4:.*:.*'))
		exclude(dependency('org.xerial.snappy:.*:.*'))
		exclude(dependency('org.slf4j:.*:.*'))
	}

	// for things we directly depend on, repackage so we don't conflict with other connectors
	relocate 'com.amazonaws', 'com.spredfast.shade.amazonaws'
	relocate 'com.fasterxml', 'com.spredfast.shade.fasterxml'
	relocate 'org.apache.commons', 'com.spredfast.shade.apache.commons'
	relocate 'org.apache.http', 'com.spredfast.shade.apache.http'
	relocate 'org.joda', 'com.spredfast.shade.joda'
}

dependencies {
	implementation project(':sink')
	implementation project(':source')
}



task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from subprojects*.tasks.javadoc.destinationDir
}

task sourcesJar(type: Jar) {
	from subprojects*.sourceSets.main.allSource
	classifier = 'sources'
}

jar {
	from subprojects*.sourceSets.main.output
}

artifacts {
	archives javadocJar, sourcesJar
}

ext {
	pomHumanName = 'Kafka Connect S3'
	pomDesc = 'S3 Source and Sink Connectors for Kafka Connect'
}

test {
	testLogging {
		events "passed", "skipped", "failed"

		showExceptions true
		exceptionFormat "full"
		showCauses true
		showStackTraces true

		showStandardStreams = false
	}
}
